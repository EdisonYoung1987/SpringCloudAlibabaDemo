<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.edison</groupId>
    <artifactId>spring-cloud-alibaba-demo</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>user-microsvcs</module>
        <module>cloud-gateway</module>
        <module>cloud-common</module>
        <module>cloud-auth</module>
        <module>cloud-admin</module>
        <module>cloud-admin-restHighLevelClient</module>
        <module>cloud-sentinel</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <!--springboot 、cloud 、cloud alibaba三者的版本依赖关系可以参考https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明-->
        <springboot.version>2.2.4.RELEASE</springboot.version>
        <spring.cloud.version>Hoxton.SR1</spring.cloud.version>
<!--        <spring.cloud.version>Greenwich.RC2</spring.cloud.version>-->
        <spring.cloud.alibaba.version>2.2.0.RELEASE</spring.cloud.alibaba.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <java.version>1.8</java.version>
        <maven.compler.source>1.8</maven.compler.source>
        <maven.compler.target>1.8</maven.compler.target>
        <!--<skipTests>true</skipTests>--><!--这个打包时会编译测试类生成class文件，但不会运行测试类-->
        <maven.test.skip>true</maven.test.skip><!--这个打包时都不会编译测试类，也不会运行测试类-->
    </properties>

    <packaging>pom</packaging> <!--这个需要添加-->

    <dependencyManagement> <!--这里面的依赖包，如果子项目会用到，需要在自己的pom.xml中引入，此处只做版本号管理，不实际引入-->
        <dependencies><!--引入springcloud接口以及官网的spring cloud gateway，而netflix那一套是springcloud的主要实现之一-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <!--引入springcloud的另一主要实现apring cloud alibaba
                    0.9以上的版本的groupId是这个，低版本是org.springframework.cloud-->
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <!--mysql-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.12</version>  <!--这个数据库驱动版本需要自己指定-->
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.1.13</version>
            </dependency>
            <!--ES-->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>6.7.2</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>6.7.2</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>6.8.15</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies><!--这些依赖包子项目就不需要再写了，会直接继承-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <!-- lombok 简化开发 @DATA提供get/set方法 而@SLFJ2提供log日志-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.2</version>
        </dependency>
        <!--使bootstrap配置生效-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
        </dependency>
    </dependencies>

    <!--这里是指定update和插件的仓库，这样打包的时候也会从该仓库下载jar包-->
    <!--<repositories>
        <repository>
            <id>alimaven</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>&lt;!&ndash;false:SNAPSHOT版本的jar包不去这里寻找和下载&ndash;&gt;
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>alimaven</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>-->
</project>